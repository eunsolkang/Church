{"version":3,"sources":["lib/firebase.ts","hooks/common/useRouter.ts","components/common/Responsive.tsx","components/main/User.tsx","hooks/user/useUser.ts","hooks/common/useInput.tsx","components/common/Header.tsx","lib/styles/palette.ts","pages/UserPage.tsx","components/main/Attend.tsx","hooks/user/useAttend.ts","pages/AttendPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["database","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","getUser","i","ref","once","removeUser","id","remove","createUser","data","set","useRouter","params","useParams","location","useLocation","history","useHistory","match","useRouteMatch","useMemo","push","replace","pathname","query","queryString","parse","search","ResponsiveBlock","styled","div","Responsive","children","rest","UserBlock","User","useState","userList","setUserList","setRemove","update","setUpdate","name","phoneNumber","position","input","setInput","handleUserList","a","async","value","list","val","Object","entries","console","log","useEffect","handleRemove","isRemove","handleUpdateUser","payment","onChange","e","target","handleCreateUser","handleGetUser","user","useUser","router","page","activePage","setActivePage","open","setOpen","updateOpen","setUpdateOpen","setValue","useInput","Dimmer","active","inverted","Loader","size","close","updateClose","filterUser","filter","indexOf","trim","users","map","profileImg","List","Item","key","Content","floated","Button","onClick","window","confirm","onRemove","primary","updateShow","Image","avatar","src","className","length","Input","icon","fluid","placeholder","divided","verticalAlign","Pagination","totalPages","Math","floor","onPageChange","Modal","onClose","Header","Form","type","label","Actions","negative","positive","labelPosition","content","disabled","HeaderBlock","Wrapper","Spacer","to","UserPage","palette","gray","cyan","creatAt","AttendBlock","Attend","attendList","setAttendList","moment","format","date","setDate","handleAttendList","handleLeftDate","add","handleRightDate","useAttend","attends","find","mapList","l","time","Icon","color","AttendPage","App","firebase","messaging","fire","exact","component","path","Boolean","hostname","createSagaMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6c07add4.chunk.js","sourcesContent":["import * as firebase from 'firebase'\nimport axios from 'axios';\nimport { fileURLToPath } from 'url';\nlet database;\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCoekKbIb-fOIjFLxhdSYAmJp0lunAgBFc\",\n  authDomain: \"church-attendence.firebaseapp.com\",\n  databaseURL: \"https://church-attendence.firebaseio.com\",\n  projectId: \"church-attendence\",\n  storageBucket: \"church-attendence.appspot.com\",\n  messagingSenderId: \"340106405182\",\n  appId: \"1:340106405182:web:6b970853764db0b6d7f86f\"\n};\n\nexport const fire = () => {\n    if (!firebase.apps.length) {\n        firebase.initializeApp(firebaseConfig);\n    }\n     database = firebase.database();\n     const messaging = firebase.messaging();\n     console.log(messaging);\n}\n\n// 유저 관련\nexport const getUserList = () => {\n    return database.ref('/users').once('value')\n}\nexport const getUser = (i) => {\n    return database.ref(`/users/${i}`).once('value');\n}\nexport const removeUser = (id) => {\n    return database.ref(`/users/${id}`).remove();\n}\n\nexport const createUser = (data, i) => {\n    return database.ref(`/users/${i}`).set(data)\n}\nexport const updateUser = (data, i) => {\n    return database.ref(`/users/${i}`).update(data);\n}\n\nexport const getAttendList = () => {\n    return database.ref('/attend').once('value')\n}\n\n","import React, {useMemo} from 'react'\nimport { useParams, useLocation, useHistory, useRouteMatch } from 'react-router-dom';\nimport queryString from 'query-string';\nexport function useRouter() {\n    const params = useParams();\n    const location = useLocation();\n    const history = useHistory();\n    const match = useRouteMatch();\n  \n    // Return our custom router object\n    // Memoize so that a new object is only returned if something changes\n    return useMemo(() => {\n      return {\n        // For convenience add push(), replace(), pathname at top level\n        push: history.push,\n        replace: history.replace,\n        pathname: location.pathname,\n        // Merge params and parsed query string into single \"query\" object\n        // so that they can be used interchangeably.\n        // Example: /:topic?sort=popular -> { topic: \"react\", sort: \"popular\" }\n        query: {\n          ...queryString.parse(location.search), // Convert string to object\n          ...params\n        },\n        // Include match, location, history objects so we have\n        // access to extra React Router functionality if needed.\n        match,\n        location,\n        history\n      };\n    }, [params, match, location, history]);\n  }","import React from 'react';\nimport styled from 'styled-components';\n// import palette from '../../lib/styles/palette'\n\nconst ResponsiveBlock = styled.div`\n    padding-left : 1rem;\n    padding-right : 1rem;\n    width: 1024px;\n    margin : 0 auto;\n    @media(max-width: 1024px){\n        width : 768px;\n    }\n    @media(max-width: 768px){\n        width: 100%;\n    }\n`;\n\nconst Responsive = ({children, ...rest}) => {\n    return (\n        <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>\n    )\n}\n\nexport default Responsive;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette'\nimport useUser from '../../hooks/user/useUser'\nimport {  Image, List, Button, Pagination, Input, Loader, Dimmer, Modal, Form } from 'semantic-ui-react'\nimport useInput from '../../hooks/common/useInput';\n\nimport profileImg from '../../img/profile.png'\nimport {Link} from 'react-router-dom'\nimport { useRouter } from '../../hooks/common/useRouter';\nimport Responsive from '../common/Responsive';\nconst UserBlock = styled(Responsive)`\n    padding : 2rem;\n    .page-bar{\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n    }\n    .top{\n        display : flex;\n        justify-content : space-between;\n    }\n`;\n\nconst User = () => {\n    const {userList, handleRemove, handleUpdateUser, onChange, handleCreateUser, input, handleGetUser} = useUser();\n    const router = useRouter();\n    const [activePage, setActivePage] = useState(router.query.page ? router.query.page : 1 );\n    const [open, setOpen] = useState(false);\n    const [updateOpen, setUpdateOpen] = useState(false);\n    const search = useInput(\"search\")\n    if (!userList){\n        return (\n            <UserBlock>\n                <Dimmer active inverted>\n                    <Loader size='massive'>Loading</Loader>\n                </Dimmer>\n            </UserBlock>\n        )\n    }\n    console.log(userList);\n\n    const onRemove = (id) =>{\n        const accept = window.confirm(\"정말 삭제하시겠습니까?\");\n        if(!accept){\n            return;\n        }\n        handleRemove(id)\n    }\n    const onChangePage = (e : any, { activePage } : any)=>{\n        setActivePage(activePage)\n        router.history.push(`?page=${activePage}`)\n    }\n\n    const show = () => {\n        setOpen(true);\n    }\n    const close = () => setOpen(false);\n    \n    const updateShow = (i) => {\n        setUpdateOpen(true);\n        \n        handleGetUser(i);\n    }\n    const updateClose = () => setUpdateOpen(false);\n    \n    const filterUser = userList?.filter(user => user[1]?.name?.indexOf(search.value.trim()) !== -1);\n    const users = filterUser?.map((user, i)=>{\n        const {profileImg, phoneNumber, position, id, name } = user[1];\n        \n        if(((activePage - 1) * 13 <= i && i<= ((activePage - 1) * 13) + 13)){\n            return(\n                <List.Item key={i}>\n                    \n                    <List.Content floated='right'>\n                        <Button onClick={()=>onRemove(user[0])}>삭제</Button>\n                    </List.Content>\n                    <List.Content floated='right'>\n                        <Button primary onClick={()=>updateShow(user[0])}>수정</Button>\n                    </List.Content>\n                    <Image avatar src={profileImg}/>\n                    <List.Content>{name} <br/>{position ? (\"위치 : \"+  position) : \"\"}<br/>{phoneNumber} </List.Content>\n                    <List.Content> </List.Content>\n                </List.Item>\n            )\n        }\n        \n    })\n    \n    return (\n        <UserBlock>\n            <p className=\"top\">총 회원수 : {users.length}명 <Button primary onClick={show}>회원추가</Button></p>\n            <Input icon='search' fluid placeholder='Search...' {...search}/>\n            <List divided verticalAlign='middle'>\n               {users} \n            </List>\n            <div className=\"page-bar\">\n                <Pagination\n                    totalPages={Math.floor(users?.length / 13) }\n                    activePage={activePage}\n                    onPageChange={onChangePage}\n                />\n            </div>\n            <Modal size=\"tiny\" open={open} onClose={close}>\n                    <Modal.Header>회원 추가</Modal.Header>\n                    <Modal.Content>\n                        <Form>\n                            <Form.Input type=\"text\" onChange={onChange} name=\"name\" label=\"회원 이름\"/>\n                            <Form.Input type=\"text\" onChange={onChange} name=\"phoneNumber\" label=\"전화번호\"/>\n                            <Form.Input type=\"text\" onChange={onChange} name=\"position\" label=\"위치\"/>\n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button negative onClick={close}>취소</Button>\n                        <Button\n                            positive\n                            icon='checkmark'\n                            labelPosition='right'\n                            content='추가하기'\n                            onClick={()=>{\n                                handleCreateUser({name : input.name, phoneNumber : input.phoneNumber, position : input.position}, users.length);\n                                close();\n                            }}\n                        />\n                    </Modal.Actions>\n                </Modal>\n                <Modal size=\"tiny\" open={updateOpen} onClose={updateClose}>\n                    <Modal.Header>회원 수정</Modal.Header>\n                    <Modal.Content>\n                        <Form>\n                            <Form.Input type=\"text\" onChange={onChange} value={input.name} name=\"name\" disabled={true} label=\"회원 이름\"/>\n                            <Form.Input type=\"text\" onChange={onChange} value={input.phoneNumber} name=\"phoneNumber\" label=\"전화번호\"/>\n                            <Form.Input type=\"text\" onChange={onChange} value={input.position} name=\"position\" label=\"위치\"/>\n                            \n                        </Form>\n                    </Modal.Content>\n                    <Modal.Actions>\n                        <Button negative onClick={updateClose}>취소</Button>\n                        <Button\n                            positive\n                            icon='checkmark'\n                            labelPosition='right'\n                            content='수정하기'\n                            onClick={()=>{\n                                handleUpdateUser({name : input.name, phoneNumber : input.phoneNumber, position : input.position},input.i );\n                                updateClose();\n                            }}\n                        />\n                    </Modal.Actions>\n                </Modal>\n        </UserBlock>\n    )\n}\n\nexport default User;","import react, {useCallback, useEffect, useState} from 'react';\nimport  {getUserList, removeUser, updateUser, createUser, getUser} from '../../lib/firebase'\n\nexport default function useUser(){\n\n    const [userList, setUserList] = useState();\n    const [remove, setRemove] = useState(false);\n    const [update, setUpdate] = useState(false);\n\n    const [input, setInput] = useState({\n        name : '',\n        phoneNumber : '',\n        position : '',\n        i : 0\n    })\n    const handleUserList = async() =>{\n        try{\n            const value = await getUserList();\n            const list = value.val();\n            setUserList(Object.entries(list) as any);\n            \n        }catch(e){\n            console.log(e);\n        }\n    }\n    const handleRemove = async(id) =>{\n        try{\n            const isRemove = await removeUser(id);\n            console.log(isRemove);\n            setRemove(true)\n            \n        }catch(e){\n            console.log();\n        }\n    }\n    const handleGetUser = async(i) =>{\n        const user = await getUser(i);\n        setInput({\n            name : user.val().name,\n            phoneNumber : user.val().phoneNumber,\n            position : user.val().position,\n            i : i\n        });\n        \n    }\n    const handleUpdateUser = async(id, payment) =>{\n        try{\n            await updateUser(id, payment);\n            setUpdate(true);\n        }catch(e){\n            console.log(e);\n        }\n    }\n    const onChange = (e) =>{\n        const { name, value } = e.target;\n        setInput({\n            ...input,\n            [name] : value\n        })\n    }\n    const handleCreateUser = async(data, i) =>{\n        try{\n            console.log(data, i);\n            \n            \n            await createUser(data, i);\n            setUpdate(true);\n        }catch(e){\n            console.log(e);\n            \n        }\n    }\n    useEffect(\n        ()=>{\n            handleUserList();\n        }, []\n    )\n    useEffect(\n        ()=>{\n            handleUserList();\n            setRemove(false);\n            setUpdate(false);\n        },[remove, update]\n    )\n    return {\n        userList, handleRemove, handleUpdateUser, onChange, handleCreateUser, input, handleGetUser\n    }\n}","import react, {useState} from 'react';\n\nexport default function useInput(name: string) {    \n    const [value, setValue] = useState(\"\");\n    function changeValue(e) {\n      setValue(e.target.value);\n      console.log(e.target.name, e.target.value);\n    }\n    return {\n      value,\n      onChange : changeValue,\n      name\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport Responsive from './Responsive';\nimport {Link} from 'react-router-dom';\nimport { Dropdown, Icon, Button } from 'semantic-ui-react'\nimport { useRouter } from '../../hooks/common/useRouter';\n\nconst HeaderBlock = styled.div`\n    position : fixed;\n    width: 100%;\n    z-index : 100;\n    box-shadow : 0px 2px 4px rgba(0, 0, 0, 0.08);\n    background : white;\n`;\n\nconst Wrapper = styled(Responsive)`\n    height: 4rem;\n    display : flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content : space-between;\n    .logo-box{\n        display: flex;\n        flex-direction: row;\n        .logo{\n            font-size : 1.125rem;\n            font-weight : 800;\n            letter-spacing : 2px;\n            margin-left: 2rem;\n        }\n        \n    }\n    \n    .right{\n        display : flex;\n        align-items : center;\n    }\n    .nav{\n       margin-left : 1rem;\n    }\n`\nconst Spacer = styled.div`\n    height : 4rem;\n`;\n\nfunction Header() {\n    const router = useRouter()\n    return (\n        <>\n        <HeaderBlock>\n            <Wrapper>\n                <div className=\"logo-box\">\n                    <Link className=\"logo\" to=\"/user\">수서교회 출입대장</Link>\n                </div>\n                <nav>\n                    {/* <Link className=\"nav\" to=\"/chat\">채팅관리</Link> */}\n                    <Link className=\"nav\" to=\"/user\">회원관리</Link>\n                    <Link className=\"nav\" to=\"/attend\">출석관리</Link>\n                </nav>\n            </Wrapper>\n        </HeaderBlock>\n        <Spacer/>\n        </>\n    )\n}\n\nexport default Header;\n","const palette = {\n    gray: [\n      '#f8f9fa',\n      '#f1f3f5',\n      '#e9ecef',\n      '#dee2e6',\n      '#ced4da',\n      '#adb5bd',\n      '#868e96',\n      '#495057',\n      '#343a40',\n      '#212529',\n    ],\n    cyan: [\n      '#e3fafc',\n      '#c5f6fa',\n      '#99e9f2',\n      '#66d9e8',\n      '#3bc9db',\n      '#22b8cf',\n      '#15aabf',\n      '#1098ad',\n      '#0c8599',\n      '#0b7285',\n    ],\n  };\n  \n  export default palette;\nconst users = [\n  {\n    creatAt : \"2020-02-01\"\n  }\n];\nconst userList = users.map(user => {\n\n});\nfor (let i=0; i<12; i++){\n  \n}\n\n\n\n","import React from 'react';\nimport User from '../components/main/User';\nimport Header from '../components/common/Header';\n\nfunction UserPage() {\n    return (\n        <div>\n            <Header/>\n            <User/>\n        </div>\n    )\n}\n\nexport default UserPage;\n","import React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette'\nimport useAttend from '../../hooks/user/useAttend';\nimport { Icon, Input, List } from 'semantic-ui-react';\nimport Responsive from '../common/Responsive';\nconst AttendBlock = styled(Responsive)`\n.date{\n        display : flex;\n        flex-direction : row;   \n        justify-content: center;\n        align-items : center;\n        margin-top : 1rem;\n        user-select: none;\n        \n        .content{\n            /* border-radius : 8px; */\n            text-align : center;\n            width: 120px;\n            font-size : 1.5rem;\n            margin-right : 1rem;\n            margin-left : 1rem;\n            border : none;\n            border-bottom : 3px solid rgb(118, 118, 118);\n            /* background-color : ${palette.cyan[5]}; */\n            padding-top : .75rem;\n            padding-bottom : .75rem;\n            color : black;\n            font-weight : 700;\n        }\n        .icon{\n            cursor: pointer;\n        }\n    }\n`;\n\nconst Attend = () => {\n    const {attendList, handleLeftDate, onChange, handleRightDate, date} = useAttend();\n\n    console.log(attendList);\n    \n    const attends = attendList?.find(a => a[0] === date) && attendList?.find(a => a[0] === date)[1]\n    const list = attends && Object.entries(attends);\n\n    const mapList  = list?.map((l, i)=> {\n        const {time, user} = l[1] as any;\n        return (\n            <List.Item key={i}>\n                    <List.Content floated='right'>\n                        {time}\n                    </List.Content>\n                    <List.Content>{user.name} <br/>{user.position ? (\"위치 : \"+  user.position) : \"\"}<br/>{user.phoneNumber} </List.Content>\n            </List.Item>\n        )\n    }) as any;\n\n    return (\n        <AttendBlock>\n            <div className=\"date\">\n                <span> <Icon color=\"grey\" onClick={handleLeftDate} name=\"angle left\" size=\"big\"/> </span>\n                <Input type=\"date\" value={date} onChange={onChange} />\n                <span> <Icon color=\"grey\" onClick={handleRightDate} name=\"angle right\" size=\"big\"/> </span>\n            </div>\n            <List divided verticalAlign='middle'>\n               {mapList ? mapList : \"명단없음!\"} \n            </List>\n        </AttendBlock>\n    )\n}\n\nexport default Attend;","import react, {useCallback, useEffect, useState} from 'react';\nimport  {getAttendList} from '../../lib/firebase'\nimport moment from 'moment';\n\nexport default function useAttend(){\n\n    const [attendList, setAttendList] = useState();\n    const [remove, setRemove] = useState(false);\n    const [update, setUpdate] = useState(false);\n    const [date, setDate] = useState(moment().format('YYYY-MM-DD'))\n    const handleAttendList = async() =>{\n        try{\n            const value = await getAttendList();\n            const list = value.val();\n            setAttendList(Object.entries(list) as any);\n            \n        }catch(e){\n            console.log(e);\n        }\n    }\n    const handleRightDate = ()=>{\n        setDate(moment(date).add('d', 1).format('YYYY-MM-DD'))\n        \n    }\n    const handleLeftDate = ()=>{\n        setDate(moment(date).add('d', -1).format('YYYY-MM-DD'))\n    }\n    const onChange = (e) =>{\n        const { name, value } = e.target;\n        setDate(value);\n    }\n  \n    useEffect(\n        ()=>{\n            handleAttendList();\n        }, []\n    )\n    useEffect(\n        ()=>{\n            handleAttendList();\n            setRemove(false);\n            setUpdate(false);\n        },[remove, update]\n    )\n    return {\n        attendList, handleAttendList, handleLeftDate, onChange, handleRightDate, date\n    }\n}","import React from 'react';\nimport Attend from '../components/main/Attend';\nimport Header from '../components/common/Header';\n\nfunction AttendPage() {\n    return (\n        <div>\n            <Header/>\n            <Attend/>\n        </div>\n    )\n}\n\nexport default AttendPage;\n","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport { fire } from './lib/firebase'\n\nimport UserPage from './pages/UserPage';\nimport AttendPage from './pages/AttendPage';\n\nconst App: React.FC = () => {\n  fire();\n  return (\n    <div>\n      <Route exact component={UserPage} path='/'></Route>\n      <Route exact component={UserPage} path='/user'></Route>\n      <Route exact component={AttendPage} path='/attend'></Route>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css'\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter } from 'react-router-dom';\nimport createSagaMiddleware from 'redux-saga'\nimport {composeWithDevTools } from 'redux-devtools-extension'\n\nconst sagaMiddleware = createSagaMiddleware();\n\n\nReactDOM.render(\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n        , \n    document.getElementById('root')\n);\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}